from __future__ import annotations

from aiogram import F, Router
from aiogram.filters import Command
from aiogram.types import (
    KeyboardButton,
    Message,
    ReplyKeyboardMarkup,
)

from app.config.config import AppConfig
from app.storage.db import (
    get_user_by_id,
    get_user_order_history,
)


def client_menu_keyboard() -> ReplyKeyboardMarkup:
    return ReplyKeyboardMarkup(
        keyboard=[
            [KeyboardButton(text="üöñ –ó–∞–º–æ–≤–∏—Ç–∏ —Ç–∞–∫—Å—ñ"), KeyboardButton(text="üìú –ú–æ—è —ñ—Å—Ç–æ—Ä—ñ—è")],
            [KeyboardButton(text="‚ÑπÔ∏è –î–æ–ø–æ–º–æ–≥–∞"), KeyboardButton(text="‚≠êÔ∏è –ú—ñ–π —Ä–µ–π—Ç–∏–Ω–≥")],
        ],
        resize_keyboard=True,
        one_time_keyboard=False,
        input_field_placeholder="–ú–µ–Ω—é –∫–ª—ñ—î–Ω—Ç–∞",
    )


def create_router(config: AppConfig) -> Router:
    router = Router(name="client")

    @router.message(Command("client"))
    async def client_panel(message: Message) -> None:
        if not message.from_user:
            return
        
        user = await get_user_by_id(config.database_path, message.from_user.id)
        
        if user:
            text = (
                f"üë§ <b>–ü—Ä–æ—Ñ—ñ–ª—å –∫–ª—ñ—î–Ω—Ç–∞</b>\n\n"
                f"–Ü–º'—è: {user.full_name}\n"
                f"–¢–µ–ª–µ—Ñ–æ–Ω: {user.phone}\n"
                f"–ó–∞—Ä–µ—î—Å—Ç—Ä–æ–≤–∞–Ω–æ: {user.created_at.strftime('%Y-%m-%d')}"
            )
        else:
            text = (
                "üë§ <b>–ú–µ–Ω—é –∫–ª—ñ—î–Ω—Ç–∞</b>\n\n"
                "–î–ª—è –ø–æ–≤–Ω–æ–≥–æ –¥–æ—Å—Ç—É–ø—É –¥–æ —Ñ—É–Ω–∫—Ü—ñ–π –∑–∞—Ä–µ—î—Å—Ç—Ä—É–π—Ç–µ—Å—å:\n"
                "/start ‚Üí '–ó–∞—Ä–µ—î—Å—Ç—Ä—É–≤–∞—Ç–∏—Å—è'"
            )
        
        await message.answer(text, reply_markup=client_menu_keyboard())

    # –û–±—Ä–æ–±–Ω–∏–∫ "üöñ –ó–∞–º–æ–≤–∏—Ç–∏ —Ç–∞–∫—Å—ñ" –≤–∏–¥–∞–ª–µ–Ω–æ - –π–æ–≥–æ –æ–±—Ä–æ–±–ª—è—î order.py
    # –¶–µ –≤–∏–ø—Ä–∞–≤–ª—è—î –∫–æ–Ω—Ñ–ª—ñ–∫—Ç —Ä–æ—É—Ç–µ—Ä—ñ–≤

    @router.message(F.text == "üìú –ú–æ—è —ñ—Å—Ç–æ—Ä—ñ—è")
    async def show_client_history(message: Message) -> None:
        if not message.from_user:
            return
        
        orders = await get_user_order_history(config.database_path, message.from_user.id, limit=10)
        
        if not orders:
            await message.answer(
                "üìú –£ –≤–∞—Å –ø–æ–∫–∏ –Ω–µ–º–∞—î –∑–∞–º–æ–≤–ª–µ–Ω—å.\n\n"
                "–ù–∞—Ç–∏—Å–Ω—ñ—Ç—å 'üöñ –ó–∞–º–æ–≤–∏—Ç–∏ —Ç–∞–∫—Å—ñ' –∞–±–æ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–π—Ç–µ /order",
                reply_markup=client_menu_keyboard()
            )
            return
        
        text = "üìú <b>–í–∞—à–∞ —ñ—Å—Ç–æ—Ä—ñ—è –∑–∞–º–æ–≤–ª–µ–Ω—å:</b>\n\n"
        for o in orders:
            status_emoji = {
                "pending": "‚è≥ –û—á—ñ–∫—É—î—Ç—å—Å—è",
                "offered": "üì§ –ü—Ä–æ–ø–æ–∑–∏—Ü—ñ—è –≤–æ–¥—ñ—é",
                "accepted": "‚úÖ –ü—Ä–∏–π–Ω—è—Ç–æ",
                "in_progress": "üöó –í –¥–æ—Ä–æ–∑—ñ",
                "completed": "‚úîÔ∏è –ó–∞–≤–µ—Ä—à–µ–Ω–æ",
                "cancelled": "‚ùå –°–∫–∞—Å–æ–≤–∞–Ω–æ"
            }.get(o.status, "‚ùì –ù–µ–≤—ñ–¥–æ–º–æ")
            
            text += f"<b>–ó–∞–º–æ–≤–ª–µ–Ω–Ω—è ‚Ññ{o.id}</b>\n"
            text += f"–°—Ç–∞—Ç—É—Å: {status_emoji}\n"
            text += f"üìç {o.pickup_address[:30]}...\n"
            text += f"üìç {o.destination_address[:30]}...\n"
            
            if o.fare_amount:
                text += f"üí∞ –í–∞—Ä—Ç—ñ—Å—Ç—å: {o.fare_amount:.2f} –≥—Ä–Ω\n"
            
            text += f"üìÖ {o.created_at.strftime('%d.%m.%Y %H:%M')}\n\n"
        
        await message.answer(text, reply_markup=client_menu_keyboard())

    @router.message(F.text == "‚ÑπÔ∏è –î–æ–ø–æ–º–æ–≥–∞")
    async def show_help(message: Message) -> None:
        text = (
            "‚ÑπÔ∏è <b>–î–æ–ø–æ–º–æ–≥–∞</b>\n\n"
            "<b>–Ø–∫ –∑–∞–º–æ–≤–∏—Ç–∏ —Ç–∞–∫—Å—ñ:</b>\n"
            "1. –ù–∞—Ç–∏—Å–Ω—ñ—Ç—å 'üöñ –ó–∞–º–æ–≤–∏—Ç–∏ —Ç–∞–∫—Å—ñ' –∞–±–æ /order\n"
            "2. –í–≤–µ–¥—ñ—Ç—å –≤–∞—à—ñ –¥–∞–Ω—ñ\n"
            "3. –ù–∞–¥—ñ—à–ª—ñ—Ç—å –≥–µ–æ–ª–æ–∫–∞—Ü—ñ—é –∞–±–æ –≤–∫–∞–∂—ñ—Ç—å –∞–¥—Ä–µ—Å—É\n"
            "4. –ü—ñ–¥—Ç–≤–µ—Ä–¥—ñ—Ç—å –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è\n"
            "5. –û—á—ñ–∫—É–π—Ç–µ –≤–æ–¥—ñ—è!\n\n"
            "<b>–ö–æ–º–∞–Ω–¥–∏:</b>\n"
            "/start - –ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é\n"
            "/order - –ó–∞–º–æ–≤–∏—Ç–∏ —Ç–∞–∫—Å—ñ\n"
            "/client - –ú–µ–Ω—é –∫–ª—ñ—î–Ω—Ç–∞\n"
            "/my_rating - –ü–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏ –≤–∞—à —Ä–µ–π—Ç–∏–Ω–≥\n\n"
            "<b>–ü—ñ–¥—Ç—Ä–∏–º–∫–∞:</b>\n"
            "–ó –ø–∏—Ç–∞–Ω—å –ø–∏—à—ñ—Ç—å –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä—É"
        )
        await message.answer(text, reply_markup=client_menu_keyboard())

    return router
