"""Push-—Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è –¥–ª—è –≤–æ–¥—ñ—ó–≤ (—Ä–æ–∑—É–º–Ω—ñ –Ω–∞–≥–∞–¥—É–≤–∞–Ω–Ω—è)"""
from __future__ import annotations

import logging
from datetime import datetime, timezone

from aiogram import Bot
from app.handlers.dynamic_pricing import get_surge_multiplier

logger = logging.getLogger(__name__)


async def notify_driver_peak_hours(bot: Bot, driver_id: int, city: str) -> None:
    """–ù–∞–≥–∞–¥—É–≤–∞–Ω–Ω—è –ø—Ä–æ –ø—ñ–∫–æ–≤–∏–π —á–∞—Å"""
    try:
        await bot.send_message(
            driver_id,
            "‚è∞ <b>–ü—ñ–∫–æ–≤–∏–π —á–∞—Å —á–µ—Ä–µ–∑ 30 —Ö–≤–∏–ª–∏–Ω!</b>\n\n"
            "üî• –û—á—ñ–∫—É—î—Ç—å—Å—è –ø—ñ–¥–≤–∏—â–µ–Ω–∏–π –ø–æ–ø–∏—Ç (+30%)\n"
            "üí∞ –í–∏—Ö–æ–¥—å—Ç–µ –æ–Ω–ª–∞–π–Ω –¥–ª—è –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–≥–æ –∑–∞—Ä–æ–±—ñ—Ç–∫—É!\n\n"
            f"üèô {city}: 7:30-9:00 —Ç–∞ 17:00-19:00",
        )
    except Exception as e:
        logger.error(f"Failed to notify driver {driver_id}: {e}")


async def notify_driver_high_demand(bot: Bot, driver_id: int, city: str, surge_percent: int) -> None:
    """–°–ø–æ–≤—ñ—â–µ–Ω–Ω—è –ø—Ä–æ –≤–∏—Å–æ–∫–∏–π –ø–æ–ø–∏—Ç"""
    emoji = "üî•üî•üî•" if surge_percent > 50 else "üî•üî•" if surge_percent > 30 else "üî•"
    
    try:
        await bot.send_message(
            driver_id,
            f"{emoji} <b>–í–ò–°–û–ö–ò–ô –ü–û–ü–ò–¢ –í {city.upper()}!</b> {emoji}\n\n"
            f"üî• –ó–∞—Ä–∞–∑ –ø—ñ–¥–≤–∏—â–µ–Ω–∏–π —Ç–∞—Ä–∏—Ñ: <b>+{surge_percent}%</b>\n"
            f"üí∞ –í–∏ –º–æ–∂–µ—Ç–µ –∑–∞—Ä–æ–±–∏—Ç–∏ –Ω–∞ {surge_percent}% –±—ñ–ª—å—à–µ!\n\n"
            "‚ö° –í–∏—Ö–æ–¥—å—Ç–µ –æ–Ω–ª–∞–π–Ω –ø—Ä—è–º–æ –∑–∞—Ä–∞–∑!"
        )
    except Exception as e:
        logger.error(f"Failed to notify driver {driver_id}: {e}")


async def notify_driver_daily_goal(bot: Bot, driver_id: int, current: float, goal: float) -> None:
    """–ù–∞–≥–∞–¥—É–≤–∞–Ω–Ω—è –ø—Ä–æ –¥–µ–Ω–Ω—É —Ü—ñ–ª—å –∑–∞—Ä–æ–±—ñ—Ç–∫—É"""
    remaining = goal - current
    percent = (current / goal * 100) if goal > 0 else 0
    
    if percent >= 100:
        # –¶—ñ–ª—å –¥–æ—Å—è–≥–Ω—É—Ç–∞
        try:
            await bot.send_message(
                driver_id,
                "üéâ <b>–í–Ü–¢–ê–Ñ–ú–û!</b>\n\n"
                f"–í–∏ –¥–æ—Å—è–≥–ª–∏ –¥–µ–Ω–Ω–æ—ó —Ü—ñ–ª—ñ: {goal:.0f} –≥—Ä–Ω!\n"
                f"üí∞ –í–∞—à –∑–∞—Ä–æ–±—ñ—Ç–æ–∫: {current:.0f} –≥—Ä–Ω\n\n"
                "–ü—Ä–æ–¥–æ–≤–∂—É–π—Ç–µ –ø—Ä–∞—Ü—é–≤–∞—Ç–∏ –∞–±–æ –≤—ñ–¥–ø–æ—á–∏–Ω—å—Ç–µ! üòä"
            )
        except Exception as e:
            logger.error(f"Failed to notify driver {driver_id}: {e}")
    
    elif percent >= 70:
        # –ú–∞–π–∂–µ –¥–æ—Å—è–≥–ª–∏
        try:
            await bot.send_message(
                driver_id,
                "üí™ <b>–ú–∞–π–∂–µ —Ç–∞–º!</b>\n\n"
                f"–¶—ñ–ª—å –Ω–∞ —Å—å–æ–≥–æ–¥–Ω—ñ: {goal:.0f} –≥—Ä–Ω\n"
                f"üí∞ –í–∂–µ –∑–∞—Ä–æ–±–∏–ª–∏: {current:.0f} –≥—Ä–Ω ({percent:.0f}%)\n"
                f"‚è±Ô∏è –ó–∞–ª–∏—à–∏–ª–æ—Å—å: {remaining:.0f} –≥—Ä–Ω\n\n"
                "–©–µ —Ç—Ä–æ—Ö–∏! üöÄ"
            )
        except Exception as e:
            logger.error(f"Failed to notify driver {driver_id}: {e}")


async def notify_driver_commission_reminder(bot: Bot, driver_id: int, amount: float, card: str) -> None:
    """–ù–∞–≥–∞–¥—É–≤–∞–Ω–Ω—è –ø—Ä–æ –Ω–µ—Å–ø–ª–∞—á–µ–Ω—É –∫–æ–º—ñ—Å—ñ—é"""
    try:
        from app.utils.qr_generator import generate_payment_qr
        from aiogram.types import BufferedInputFile
        
        # –ì–µ–Ω–µ—Ä—É–≤–∞—Ç–∏ QR
        qr = generate_payment_qr(card, amount, f"–ö–æ–º—ñ—Å—ñ—è –≤–æ–¥—ñ—è {driver_id}")
        photo = BufferedInputFile(qr.read(), filename="commission_qr.png")
        
        await bot.send_photo(
            driver_id,
            photo=photo,
            caption=(
                "‚è∞ <b>–ù–ê–ì–ê–î–£–í–ê–ù–ù–Ø –ü–†–û –ö–û–ú–Ü–°–Ü–Æ</b>\n\n"
                f"üí∏ –î–æ —Å–ø–ª–∞—Ç–∏: {amount:.2f} –≥—Ä–Ω\n"
                f"üìÖ –°–ø–ª–∞—Ç—ñ—Ç—å –¥–æ 20:00 —Å—å–æ–≥–æ–¥–Ω—ñ\n\n"
                f"üí≥ –ö–∞—Ä—Ç–∫–∞: <code>{card}</code>\n\n"
                "üì± –í—ñ–¥—Å–∫–∞–Ω—É–π—Ç–µ QR-–∫–æ–¥ –¥–ª—è —à–≤–∏–¥–∫–æ—ó –æ–ø–ª–∞—Ç–∏\n"
                "–∞–±–æ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–π—Ç–µ –∫–Ω–æ–ø–∫—É 'üí≥ –ö–æ–º—ñ—Å—ñ—è' –≤ –º–µ–Ω—é"
            )
        )
    except Exception as e:
        logger.error(f"Failed to send commission reminder to driver {driver_id}: {e}")


async def notify_driver_earnings_milestone(bot: Bot, driver_id: int, milestone: int) -> None:
    """–°–ø–æ–≤—ñ—â–µ–Ω–Ω—è –ø—Ä–æ –¥–æ—Å—è–≥–Ω–µ–Ω–Ω—è –≤—ñ—Ö–∏ –∑–∞—Ä–æ–±—ñ—Ç–∫—É"""
    milestones = {
        500: "üéâ –ü–µ—Ä—à—ñ 500 –≥—Ä–Ω!",
        1000: "üí∞ –ü–µ—Ä—à–∞ —Ç–∏—Å—è—á–∞!",
        5000: "üöÄ –ü'—è—Ç—å —Ç–∏—Å—è—á!",
        10000: "üèÜ –î–µ—Å—è—Ç—å —Ç–∏—Å—è—á!",
        50000: "üíé –ü'—è—Ç–¥–µ—Å—è—Ç —Ç–∏—Å—è—á!"
    }
    
    title = milestones.get(milestone, f"üéä {milestone} –≥—Ä–Ω!")
    
    try:
        await bot.send_message(
            driver_id,
            f"{title}\n\n"
            f"–í–∏ –∑–∞—Ä–æ–±–∏–ª–∏ –≤–∂–µ {milestone} –≥—Ä–Ω –∑–∞ –≤–µ—Å—å —á–∞—Å!\n"
            "–ü—Ä–æ–¥–æ–≤–∂—É–π—Ç–µ –≤ —Ç–æ–º—É –∂ –¥—É—Å—ñ! üí™"
        )
    except Exception as e:
        logger.error(f"Failed to notify driver {driver_id}: {e}")


async def notify_driver_low_rating_warning(bot: Bot, driver_id: int, rating: float) -> None:
    """–ü–æ–ø–µ—Ä–µ–¥–∂–µ–Ω–Ω—è –ø—Ä–æ –Ω–∏–∑—å–∫–∏–π —Ä–µ–π—Ç–∏–Ω–≥"""
    if rating < 4.0:
        try:
            await bot.send_message(
                driver_id,
                "‚ö†Ô∏è <b>–£–í–ê–ì–ê: –ù–∏–∑—å–∫–∏–π —Ä–µ–π—Ç–∏–Ω–≥!</b>\n\n"
                f"–í–∞—à —Ä–µ–π—Ç–∏–Ω–≥: {rating:.1f} ‚≠ê\n"
                f"–ù–æ—Ä–º–∞: 4.5+ ‚≠ê\n\n"
                "–ù–∏–∑—å–∫–∏–π —Ä–µ–π—Ç–∏–Ω–≥ –º–æ–∂–µ –ø—Ä–∏–∑–≤–µ—Å—Ç–∏ –¥–æ:\n"
                "‚Ä¢ –ú–µ–Ω—à–µ –∑–∞–º–æ–≤–ª–µ–Ω—å (–∫–ª—ñ—î–Ω—Ç–∏ –æ–±–∏—Ä–∞—é—Ç—å —Ç–æ–ø-–≤–æ–¥—ñ—ó–≤)\n"
                "‚Ä¢ –í—Ç—Ä–∞—Ç–∞ –ø—Ä—ñ–æ—Ä–∏—Ç–µ—Ç—É –Ω–∞ –Ω–æ–≤—ñ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è\n"
                "‚Ä¢ –ë–ª–æ–∫—É–≤–∞–Ω–Ω—è –∞–∫–∞—É–Ω—Ç—É –ø—Ä–∏ <3.0\n\n"
                "üí° –Ø–∫ –ø–æ–∫—Ä–∞—â–∏—Ç–∏:\n"
                "‚Ä¢ –ë—É–¥—å—Ç–µ –≤–≤—ñ—á–ª–∏–≤—ñ –∑ –∫–ª—ñ—î–Ω—Ç–∞–º–∏\n"
                "‚Ä¢ –ü—Ä–∏—ó–∂–¥–∂–∞–π—Ç–µ –≤—á–∞—Å–Ω–æ\n"
                "‚Ä¢ –ü—ñ–¥—Ç—Ä–∏–º—É–π—Ç–µ —á–∏—Å—Ç–æ—Ç—É –∞–≤—Ç–æ\n"
                "‚Ä¢ –á–∑–¥—å—Ç–µ –∞–∫—É—Ä–∞—Ç–Ω–æ"
            )
        except Exception as e:
            logger.error(f"Failed to notify driver {driver_id}: {e}")


async def notify_driver_inactive(bot: Bot, driver_id: int, days: int) -> None:
    """–ù–∞–≥–∞–¥—É–≤–∞–Ω–Ω—è –Ω–µ–∞–∫—Ç–∏–≤–Ω–æ–º—É –≤–æ–¥—ñ—é"""
    try:
        await bot.send_message(
            driver_id,
            f"üëã <b>–ú–∏ —Å–∫—É—á–∏–ª–∏ –∑–∞ –≤–∞–º–∏!</b>\n\n"
            f"–í–∏ –Ω–µ –ø—Ä–∞—Ü—é–≤–∞–ª–∏ –≤–∂–µ {days} –¥–Ω—ñ–≤.\n\n"
            "üí∞ <b>–°–ø–µ—Ü—ñ–∞–ª—å–Ω–∞ –ø—Ä–æ–ø–æ–∑–∏—Ü—ñ—è:</b>\n"
            "‚Ä¢ –í–∏–π–¥—ñ—Ç—å –æ–Ω–ª–∞–π–Ω —Å—å–æ–≥–æ–¥–Ω—ñ\n"
            "‚Ä¢ –û—Ç—Ä–∏–º–∞–π—Ç–µ –±–æ–Ω—É—Å +10% –Ω–∞ –ø–µ—Ä—à—ñ 3 –ø–æ—ó–∑–¥–∫–∏\n\n"
            "üöó –ß–µ–∫–∞—î–º–æ –≤–∞—Å –Ω–∞ —Ä–æ–±–æ—Ç—ñ!"
        )
    except Exception as e:
        logger.error(f"Failed to notify inactive driver {driver_id}: {e}")


async def notify_driver_new_area_opportunity(bot: Bot, driver_id: int, area: str, demand_percent: int) -> None:
    """–°–ø–æ–≤—ñ—â–µ–Ω–Ω—è –ø—Ä–æ –Ω–æ–≤—ñ –º–æ–∂–ª–∏–≤–æ—Å—Ç—ñ –≤ —Ä–∞–π–æ–Ω—ñ"""
    try:
        await bot.send_message(
            driver_id,
            f"üìç <b>–ú–û–ñ–õ–ò–í–Ü–°–¢–¨ –í –†–ê–ô–û–ù–Ü {area.upper()}!</b>\n\n"
            f"üî• –ü—ñ–¥–≤–∏—â–µ–Ω–∏–π –ø–æ–ø–∏—Ç: +{demand_percent}%\n"
            f"üí∞ –ë–∞–≥–∞—Ç–æ –∑–∞–º–æ–≤–ª–µ–Ω—å —á–µ–∫–∞—é—Ç—å –≤–æ–¥—ñ—è!\n\n"
            "‚ö° –ü–æ—ó–¥—å—Ç–µ –≤ —Ü–µ–π —Ä–∞–π–æ–Ω –¥–ª—è –∑–±—ñ–ª—å—à–µ–Ω–Ω—è –∑–∞—Ä–æ–±—ñ—Ç–∫—É!"
        )
    except Exception as e:
        logger.error(f"Failed to notify driver {driver_id}: {e}")
