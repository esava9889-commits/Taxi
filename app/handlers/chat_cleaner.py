"""–û–±—Ä–æ–±–Ω–∏–∫ –æ—á–∏—â–µ–Ω–Ω—è —á–∞—Ç—É - –∫–Ω–æ–ø–∫–∞ ü™Ñ"""
from __future__ import annotations

import logging
from aiogram import F, Router
from aiogram.types import Message

from app.config.config import AppConfig

logger = logging.getLogger(__name__)


def create_router(config: AppConfig) -> Router:
    router = Router(name="chat_cleaner")

    @router.message(F.text == "ü™Ñ")
    async def clean_chat(message: Message) -> None:
        """–û—á–∏—Å—Ç–∏—Ç–∏ —á–∞—Ç - –≤–∏–¥–∞–ª–∏—Ç–∏ 5 –æ—Å—Ç–∞–Ω–Ω—ñ—Ö –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å"""
        if not message.from_user:
            return
        
        try:
            # –í–∏–¥–∞–ª–∏—Ç–∏ —Å–∞–º–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∑ ü™Ñ
            current_msg_id = message.message_id
            deleted_count = 0
            
            # –í–∏–¥–∞–ª–∏—Ç–∏ 5 –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å (–≤–∫–ª—é—á–∞—é—á–∏ –ø–æ—Ç–æ—á–Ω–µ)
            for i in range(5):
                try:
                    await message.bot.delete_message(
                        chat_id=message.from_user.id,
                        message_id=current_msg_id - i
                    )
                    deleted_count += 1
                except Exception as e:
                    # –Ü–≥–Ω–æ—Ä—É—î–º–æ –ø–æ–º–∏–ª–∫–∏ (–ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –º–æ–∂–µ –±—É—Ç–∏ –≤–∂–µ –≤–∏–¥–∞–ª–µ–Ω–µ –∞–±–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–µ)
                    logger.debug(f"–ù–µ –≤–¥–∞–ª–æ—Å—è –≤–∏–¥–∞–ª–∏—Ç–∏ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è {current_msg_id - i}: {e}")
                    pass
            
            logger.info(f"ü™Ñ –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á {message.from_user.id} –æ—á–∏—Å—Ç–∏–≤ {deleted_count} –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å")
            
        except Exception as e:
            logger.error(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –æ—á–∏—â–µ–Ω–Ω—è —á–∞—Ç—É –¥–ª—è {message.from_user.id}: {e}")

    return router
