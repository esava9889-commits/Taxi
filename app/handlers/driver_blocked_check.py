"""–ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –±–ª–æ–∫—É–≤–∞–Ω–Ω—è –≤–æ–¥—ñ—ó–≤"""
from aiogram.types import Message, CallbackQuery
from app.storage.db import get_driver_by_tg_user_id


async def is_driver_blocked(db_path: str, user_id: int) -> bool:
    """
    –ü–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏ —á–∏ –∑–∞–±–ª–æ–∫–æ–≤–∞–Ω–∏–π –≤–æ–¥—ñ–π.
    
    –í–æ–¥—ñ–π –≤–≤–∞–∂–∞—î—Ç—å—Å—è –∑–∞–±–ª–æ–∫–æ–≤–∞–Ω–∏–º, —è–∫—â–æ:
    - –°—Ç–∞—Ç—É—Å = "rejected" (–∑–∞–±–ª–æ–∫–æ–≤–∞–Ω–∏–π –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º)
    """
    driver = await get_driver_by_tg_user_id(db_path, user_id)
    if driver and driver.status == "rejected":
        return True
    return False


async def send_driver_blocked_message(event: Message | CallbackQuery) -> bool:
    """
    –í—ñ–¥–ø—Ä–∞–≤–∏—Ç–∏ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ –±–ª–æ–∫—É–≤–∞–Ω–Ω—è –≤–æ–¥—ñ—è.
    
    Returns:
        True —è–∫—â–æ –≤–æ–¥—ñ–π –∑–∞–±–ª–æ–∫–æ–≤–∞–Ω–∏–π (–ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–æ)
        False —è–∫—â–æ –≤–æ–¥—ñ–π –Ω–µ –∑–∞–±–ª–æ–∫–æ–≤–∞–Ω–∏–π
    """
    blocked_text = (
        "üö´ <b>–í–ê–® –ê–ö–ê–£–ù–¢ –í–û–î–Ü–Ø –ó–ê–ë–õ–û–ö–û–í–ê–ù–û</b>\n\n"
        "‚ùå –ù–∞ –∂–∞–ª—å, –≤–∏ –Ω–µ –º–æ–∂–µ—Ç–µ:\n"
        "‚Ä¢ –ü—Ä–∏–π–º–∞—Ç–∏ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è\n"
        "‚Ä¢ –ü—Ä–∞—Ü—é–≤–∞—Ç–∏ —è–∫ –≤–æ–¥—ñ–π\n"
        "‚Ä¢ –û—Ç—Ä–∏–º—É–≤–∞—Ç–∏ –¥–æ—Å—Ç—É–ø –¥–æ –ø–∞–Ω–µ–ª—ñ –≤–æ–¥—ñ—è\n\n"
        "üìû –Ø–∫—â–æ –≤–≤–∞–∂–∞—î—Ç–µ —Ü–µ –ø–æ–º–∏–ª–∫–æ—é, –∑–≤–µ—Ä–Ω—ñ—Ç—å—Å—è –¥–æ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∞.\n\n"
        "üí° –í–∏ –º–æ–∂–µ—Ç–µ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—Ç–∏—Å—è –±–æ—Ç–æ–º —è–∫ –∫–ª—ñ—î–Ω—Ç."
    )
    
    if isinstance(event, CallbackQuery):
        await event.answer(blocked_text, show_alert=True)
        return True
    elif isinstance(event, Message):
        await event.answer(blocked_text, parse_mode="HTML")
        return True
    
    return False


async def check_driver_blocked_and_notify(db_path: str, event: Message | CallbackQuery) -> bool:
    """
    –ü–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏ –±–ª–æ–∫—É–≤–∞–Ω–Ω—è –≤–æ–¥—ñ—è —Ç–∞ –≤—ñ–¥–ø—Ä–∞–≤–∏—Ç–∏ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è —è–∫—â–æ –∑–∞–±–ª–æ–∫–æ–≤–∞–Ω–∏–π.
    
    Returns:
        True —è–∫—â–æ –≤–æ–¥—ñ–π –∑–∞–±–ª–æ–∫–æ–≤–∞–Ω–∏–π
        False —è–∫—â–æ –≤–æ–¥—ñ–π –Ω–µ –∑–∞–±–ª–æ–∫–æ–≤–∞–Ω–∏–π
    """
    if isinstance(event, CallbackQuery):
        user_id = event.from_user.id if event.from_user else None
    elif isinstance(event, Message):
        user_id = event.from_user.id if event.from_user else None
    else:
        return False
    
    if not user_id:
        return False
    
    if await is_driver_blocked(db_path, user_id):
        await send_driver_blocked_message(event)
        return True
    
    return False
